openapi: '3.0.0'
info:
  version: '1.0.0'
  title: Back-end Challenge API
  description: Simple API for testing the GET, POST, PUT and DELETE methods of NODE.JS and EXPRESS.JS with an actual database(mongoDB, mongoose)

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt

servers:
  - url: https://localhost:4000
paths:
  /getUser:
    get:
      security:
        - bearerAuth: [jwt]
      description: Returns the user that has the same id as the one given as parameter
      responses:
        200:
          description: Successfully returned the specific user
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  password:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  __v:
                    type: string
        400:
          description: There was something wrong with the request
          content:
            text/plain:
              schema:
                type: string
        404:
          description: Requested user does not exist in the database
          content:
            text/plain:
              schema:
                type: string

  /putUser:
    put:
      security:
        - bearerAuth: []
      description: Updates a specific user and returns his details after the update
      responses:
        200:
          description: Successfully updated and returned the specific user
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: object
                  name:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  __v:
                    type: number
        400:
          description: There was something wrong with the request
          content:
            text/plain:
              schema:
                type: string
        404:
          description: Requested user does not exist in the database
          content:
            text/plain:
              schema:
                type: string

  /deleteUser:
    delete:
      security:
        - bearerAuth: []
      description: Finds and deletes a specific user and returns the deleted user's details
      responses:
        200:
          description: Successfully deleted the user and returned the specific user's details
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  password:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  __v:
                    type: number
        400:
          description: There was something wrong with the request
          content:
            text/plain:
              schema:
                type: string
        404:
          description: Requested user does not exist in the database
          content:
            text/plain:
              schema:
                type: string

  /postUser:
    post:
      security:
        - bearerAuth: []
      description: Creates a new user object, stores it in the database and returns its details to the client
      responses:
        200:
          description: Successfully stored the user to the database and returned its details
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - password
                  - email
                properties:
                  _id:
                    type: object
                  name:
                    type: string
                  password:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  __v:
                    type: number
        400:
          description: There was something wrong with the request
          content:
            text/plain:
              schema:
                type: string

  /:
    get:
      description: Returns a message that contains 'HELLO WORLD'
      responses:
        200:
          description: Successfully returned the specific user
          content:
            text/plain:
              schema:
                type: string

  /sign_up:
    get:
      description: Redirects the user to the sign_up page
      responses:
        200:
          description: Successfully redirected to the sign_up page
          content:
            text/html:
              schema:
                type: object
        404:
          description: Requested page does not exist
          content:
            text/plain:
              schema:
                type: string
    post:
      description: Creates a new user object, stores it in the database and returns its details to the client
      responses:
        200:
          description: Successfully stored the user to the database and returned its details
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - password
                  - email
                properties:
                  _id:
                    type: object
                  name:
                    type: string
                  password:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  __v:
                    type: number
        400:
          description: There was something wrong with the request
          content:
            text/plain:
              schema:
                type: string


  /log_in:
    get:
      description: Redirects the user to the log_in page
      responses:
        200:
          description: Successfully redirected to the log_in page
          content:
            text/html:
              schema:
                type: object
        404:
          description: Requested page does not exist
          content:
            text/plain:
              schema:
                type: string
    post:
      description: Logs the user into the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
              required:
                - name
                - password
      responses:
        200:
          description: Successfully logged the user into the system
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      user:
                        type: string
                        description: The user ID
        400:
          description: There was something wrong with the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string